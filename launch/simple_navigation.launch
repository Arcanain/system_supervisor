<launch>
    <!-- Tf static publish -->
    <node pkg="tf" type="static_transform_publisher" name="baselink_to_imu" args="0 0 0 0 0 0 base_link imu 100" />
    <node pkg="tf" type="static_transform_publisher" name="gps_transform" args="0 0 0 0 0 0 base_link gps 100"/>
    
    <!-- rosserial -->
    <node name="serial_node" pkg="rosserial_python" type="serial_node.py">
        <param name="port" type="string" value="/dev/ttyACM0"/>
        <param name="baud" type="int" value="115200"/>
    </node>
    
    <!-- Scan publish -->
    <!--<include file="$(find ira_laser_tools)/launch/merge_hokuyo_rplidar.launch" />-->
    <!-- Scan publish -->
    <node name="rplidarNode" pkg="rplidar_ros" type="rplidarNode" output="screen">
        <param name="serial_port" type="string" value="/dev/ttyUSB0"/>
        <!--<param name="serial_baudrate" type="int" value="115200"/>-->
        <param name="serial_baudrate"     type="int"    value="256000"/>-->
        <param name="frame_id" type="string" value="laser"/>
        <param name="inverted" type="bool" value="false"/>
        <param name="angle_compensate" type="bool" value="true"/>
    </node>

    <!-- IMU publish -->
    <include file="$(find adi_driver)/launch/adis16470.launch" />
    
    <!-- Odom publish -->
    <include file="$(find odrive_odometry)/launch/odometry_publisher.launch" />

    <!-- Run laser scan_matcher navigation -->
    <include file="$(find laser_scan_matcher_navigation)/launch/only_navigation.launch" />
    
    <!-- Run waypoint navigation -->
    <include file="$(find cirkit_waypoint_navigator)/launch/waypoint_publisher.launch" />

    <!-- Run obstacle aboidance -->
    <include file="$(find obstacle_avoidance)/launch/obstacle_avoidance.launch" />

    <!-- supervisor node  -->
    <node pkg="system_supervisor" name="supervisor" type="supervisor"/>
  
</launch>